<p>-</p>
<h2 id='getting-started'>Getting Started</h2><h3 id='1-spawning-a-new-dapp'>1. Spawning a new Dapp</h3>
<p>Our dapp will use modern JS technologies; <a href="https://www.npmjs.com">NPM</a>, <a href="https://webpack.js.org">WebPack 2</a>, <a href="https://facebook.github.io/react/">React</a>, <a href="http://babeljs.io">Babel</a>, ES6, JSX and <a href="https://github.com/paritytech/oo7">oo7</a>.</p>

<p>Getting a working set up in Javascript with all of this takes time and patience. We&#39;ll cheat and just clone a repo with it all ready. First, if you don&#39;t have Git, node.js, NPM or Webpack already installed on your system, get them (<code>sudo apt-get install git npm</code> might work on Ubuntu).</p>

<p>Next, clone our conveniently prepared <code>skeleton</code> repository:</p>
<pre class="highlight plaintext"><code>git clone https://github.com/paritytech/skeleton mydapp
</code></pre>
<p>This will make your a new repo <code>mydapp</code> with everything set up and ready to go. We will <code>cd</code> in to it and remove the origin repository lest it confuse Git:</p>
<pre class="highlight plaintext"><code>cd mydapp
git remote rm origin
</code></pre>
<p>It&#39;s liberally licensed (Apache 2.0) so you don&#39;t have to worry about open sourcing your own code (though obviously you&#39;ll be enlightened and want to do that anyway :-)). You&#39;re now free to push it out to your own Git repo, if you decide to create one on Github.</p>

<p>The next stage is to get all the dependencies installed. NPM makes this rather easy, but the bundled script makes it even easier! Just run:</p>
<pre class="highlight plaintext"><code>./init.sh
</code></pre>
<p>This should grab and install all that is required. The next thing to do is to build the final web-ready version of the fledgling dapp. We use <a href="https://webpack.js.org">webpack</a> for this; it&#39;ll smash everything together and provide you with a single <code>bundle.js</code> for you in the <code>dist</code> path, which our <code>index.html</code> (already there) brings in.</p>
<pre class="highlight plaintext"><code>webpack
</code></pre>
<p>You now have a basic dapp built. Well done!</p>
<h3 id='2-configuring-its-look'>2. Configuring its look</h3>
<p>While your dapp may well be built, it is not yet easily discoverable. You would have to host it somewhere. This can be done traditionally with a web server but for development, we will use Parity&#39;s in-built hosting.</p>

<p>Parity uses a special &quot;manifest&quot; file called to figure out how to display the entry for your dapp in Parity Wallet. This file is called <code>manifest.json</code> and must be placed in the root of your dapp&#39;s directory, in our case, this is our &quot;build&quot; directory, <code>dist</code>.</p>

<p>Open an editor to edit <code>dist/manifest.json</code>; you&#39;ll see something like:</p>
<pre class="highlight plaintext"><code>{
    "id": "skeleton",
    "name": "Skeleton",
    "description": "A skeleton dapp",
    "version": "0.1",
    "author": "Parity Technologies Ltd",
    "iconUrl": "title.png"
}
</code></pre>
<ul>
<li>The <code>id</code> is the dapp&#39;s unique identity; change that from <code>skeleton</code> to <code>mydapp</code> (or whatever).</li>
<li><code>name</code> is the dapp&#39;s user-visible name: change that to <code>My Dapp</code> (or whatever).</li>
<li>The <code>description</code> is a user-visible by-line describing what the dapp is good for. Change that to <code>My demonstration dapp</code>.</li>
<li><code>version</code> is the dapp&#39;s version - you can leave this at <code>0.1</code> for now.</li>
<li>You can change the <code>author</code> to your name.</li>
<li>The <code>iconUrl</code> is the path (within <code>dist</code>) to a square (best to make it 128x128) icon for your dapp. Feel free to move an alternative <code>title.png</code> into the <code>dist</code> directory.</li>
</ul>
<h3 id='3-getting-it-visible-in-parity-ui'>3. Getting it visible in Parity UI</h3>
<p>To get Parity UI to discover your dapp, it needs to be placed into a place that Parity UI will see - its local &quot;dapps&quot; directory. We will make a symbolic link for our dapp&#39;s <code>dist</code> directory (containing all of the ready-built dapp) in Parity UI&#39;s dapp directory.</p>

<p>Parity UI&#39;s directory structure is different depending on your system. For Mac, Parity UI&#39;s local dapp directory sits at <code>$HOME/Library/Application Support/parity-ui/dapps</code>, so you&#39;ll need to enter:</p>
<pre class="highlight plaintext"><code># For Mac systems
ln -s $PWD/dist $HOME/Library/Application\ Support/parity-ui/dapps/mydapp
</code></pre>
<p>For Linux it&#39;s <code>$HOME/.config/parity-ui/dapps</code> - in this case you&#39;d want to enter:</p>
<pre class="highlight plaintext"><code># For Linux systems
ln -s $PWD/dist $HOME/.config/parity-ui/dapps/mydapp
</code></pre>
<p>For Windows, it&#39;s in <code>%APPDATA%/Local/parity-ui/dapps</code> - here you&#39;d want to enter:</p>
<pre class="highlight plaintext"><code>%=For Windows systems=%
mklink /D "%APPDATA%/Local/parity-ui/dapps/mydapp" "%cd%/dist"
</code></pre>
<p>Once you have it linked, you should start (or restart, if already running) Parity UI. There you&#39;ll see your new dapp (in an Electron window – screenshots outdated):</p>

<p><img src="https://cloud.githubusercontent.com/assets/138296/22697933/f9d6449a-ed20-11e6-92d2-1afafaba86ea.png" alt="image" /></p>

<p>If all is well, your dapp will be visible just like this. Click it!</p>

<p><img src="https://cloud.githubusercontent.com/assets/138296/22697890/e1677726-ed20-11e6-9a64-c1832d2c36bf.png" alt="image" /></p>

<p>And there it is - your dapp. For now it&#39;s rather underwhelming with it just displaying a simple message, but in the next part of this series, we will be changing that :-)</p>

<p><a href="Tutorial-Part-2.md">2nd Part ⟶</a></p>
