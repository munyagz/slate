<h2 id='json-rpc-methods'>JSON-RPC methods</h2>
<ul>
<li><a href="#signer_confirmrequest">signer_confirmRequest</a></li>
<li><a href="#signer_confirmrequestraw">signer_confirmRequestRaw</a></li>
<li><a href="#signer_confirmrequestwithtoken">signer_confirmRequestWithToken</a></li>
<li><a href="#signer_generateauthorizationtoken">signer_generateAuthorizationToken</a></li>
<li><a href="#signer_generatewebproxyaccesstoken">signer_generateWebProxyAccessToken</a></li>
<li><a href="#signer_rejectrequest">signer_rejectRequest</a></li>
<li><a href="#signer_requeststoconfirm">signer_requestsToConfirm</a></li>
<li><a href="#signer_subscribepending">signer_subscribePending</a></li>
<li><a href="#signer_unsubscribepending">signer_unsubscribePending</a></li>
</ul>
<h2 id='json-rpc-api-reference'>JSON-RPC API Reference</h2><h3 id='signer_confirmrequest'>signer_confirmRequest</h3>
<p>Confirm a request in the signer queue</p>
<h4 id='parameters'>Parameters</h4>
<ol>
<li><code>Quantity</code> - The request id.</li>
<li><code>Object</code> - Modify the transaction before confirmation.

<ul>
<li><code>gasPrice</code>:   <code>Quantity</code> - (optional) Modify the gas price provided by the sender in Wei.</li>
<li><code>gas</code>:   <code>Quantity</code> - (optional) Gas provided by the sender in Wei.</li>
<li><code>condition</code>:   <code>Object</code> - (optional) Condition for scheduled transaction. Can be either an integer block number <code>{ block: 1 }</code> or UTC timestamp (in seconds) <code>{ timestamp: 1491290692 }</code>.</li>
</ul></li>
<li><code>String</code> - The account password</li>
</ol>
<pre class="highlight javascript"><code><span class="nx">params</span><span class="p">:</span> <span class="p">[</span>
  <span class="s2">"0x1"</span><span class="p">,</span> <span class="c1">// 1</span>
  <span class="p">{},</span>
  <span class="s2">"hunter2"</span>
<span class="p">]</span>
</code></pre><h4 id='returns'>Returns</h4>
<ul>
<li><code>Object</code> - The status of the confirmation, depending on the request type.</li>
</ul>
<h4 id='example'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_confirmRequest&quot;,&quot;params&quot;:[&quot;0x1&quot;,{},&quot;hunter2&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: {}
}
</code></p>

<hr>
<h3 id='signer_confirmrequestraw'>signer_confirmRequestRaw</h3>
<p>Confirm a request in the signer queue providing signed request.</p>
<h4 id='parameters-2'>Parameters</h4>
<ol>
<li><code>Quantity</code> - Integer - The request id</li>
<li><code>Data</code> - Signed request (RLP encoded transaction)</li>
</ol>
<pre class="highlight javascript"><code><span class="nx">params</span><span class="p">:</span> <span class="p">[</span>
  <span class="s2">"0x1"</span><span class="p">,</span> <span class="c1">// 1</span>
  <span class="s2">"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"</span>
<span class="p">]</span>
</code></pre><h4 id='returns-2'>Returns</h4>
<ul>
<li><code>Object</code> - The status of the confirmation, depending on the request type.</li>
</ul>
<h4 id='example-2'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_confirmRequestRaw&quot;,&quot;params&quot;:[&quot;0x1&quot;,&quot;0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: {}
}
</code></p>

<hr>
<h3 id='signer_confirmrequestwithtoken'>signer_confirmRequestWithToken</h3>
<p>Confirm specific request with rolling token.</p>
<h4 id='parameters-3'>Parameters</h4>
<ol>
<li><code>Quantity</code> - The request id.</li>
<li><code>Object</code> - Modify the transaction before confirmation.

<ul>
<li><code>gasPrice</code>:   <code>Quantity</code> - (optional) Modify the gas price provided by the sender in Wei.</li>
<li><code>gas</code>:   <code>Quantity</code> - (optional) Gas provided by the sender in Wei.</li>
<li><code>condition</code>:   <code>Object</code> - (optional) Conditional submission of the transaction. Can be either an integer block number <code>{ block: 1 }</code> or UTC timestamp (in seconds) <code>{ time: 1491290692 }</code> or <code>null</code>.</li>
</ul></li>
<li><code>String</code> - Password (initially) or a token returned by the previous call.</li>
</ol>
<pre class="highlight javascript"><code><span class="nx">params</span><span class="p">:</span> <span class="p">[</span>
  <span class="s2">"0x1"</span><span class="p">,</span> <span class="c1">// 1</span>
  <span class="p">{},</span>
  <span class="s2">"hunter2"</span>
<span class="p">]</span>
</code></pre><h4 id='returns-3'>Returns</h4>
<ul>
<li><code>Object</code> - Status.

<ul>
<li><code>result</code>:   <code>Object</code> - The status of the confirmation, depending on the request type.</li>
<li><code>token</code>:   <code>String</code> - Token used to authenticate the next request.</li>
</ul></li>
</ul>
<h4 id='example-3'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_confirmRequestWithToken&quot;,&quot;params&quot;:[&quot;0x1&quot;,{},&quot;hunter2&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: {
    &quot;result&quot;: { ... },
    &quot;token&quot;: &quot;cAF2w5LE7XUZ3v3N&quot;
  }
}
</code></p>

<hr>
<h3 id='signer_generateauthorizationtoken'>signer_generateAuthorizationToken</h3>
<p>Generates a new authorization token.</p>
<h4 id='parameters-4'>Parameters</h4>
<p>None</p>
<h4 id='returns-4'>Returns</h4>
<ul>
<li><code>String</code> - The new authorization token.</li>
</ul>
<h4 id='example-4'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_generateAuthorizationToken&quot;,&quot;params&quot;:[],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: &quot;bNGY-iIPB-j7zK-RSYZ&quot;
}
</code></p>

<hr>
<h3 id='signer_generatewebproxyaccesstoken'>signer_generateWebProxyAccessToken</h3>
<p>Generates a new web proxy access token.</p>
<h4 id='parameters-5'>Parameters</h4>
<ol>
<li><code>String</code> - Domain for which the token is valid. Only requests to this domain will be allowed.</li>
</ol>
<pre class="highlight javascript"><code><span class="nx">params</span><span class="p">:</span> <span class="p">[</span><span class="s2">"https://parity.io"</span><span class="p">]</span>
</code></pre><h4 id='returns-5'>Returns</h4>
<ul>
<li><code>String</code> - The new web proxy access token.</li>
</ul>
<h4 id='example-5'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_generateWebProxyAccessToken&quot;,&quot;params&quot;:[&quot;https://parity.io&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: &quot;MOWm0tEJjwthDiTU&quot;
}
</code></p>

<hr>
<h3 id='signer_rejectrequest'>signer_rejectRequest</h3>
<p>Rejects a request in the signer queue</p>
<h4 id='parameters-6'>Parameters</h4>
<ol>
<li><code>Quantity</code> - Integer - The request id</li>
</ol>
<pre class="highlight javascript"><code><span class="nx">params</span><span class="p">:</span> <span class="p">[</span>
  <span class="s2">"0x1"</span> <span class="c1">// 1</span>
<span class="p">]</span>
</code></pre><h4 id='returns-6'>Returns</h4>
<ul>
<li><code>Boolean</code> - The status of the rejection</li>
</ul>
<h4 id='example-6'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_rejectRequest&quot;,&quot;params&quot;:[&quot;0x1&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: true
}
</code></p>

<hr>
<h3 id='signer_requeststoconfirm'>signer_requestsToConfirm</h3>
<p>Returns a list of the transactions awaiting authorization.</p>
<h4 id='parameters-7'>Parameters</h4>
<p>None</p>
<h4 id='returns-7'>Returns</h4>
<ul>
<li><code>Array</code> - A list of the outstanding transactions.</li>
</ul>
<h4 id='example-7'>Example</h4>
<p>Request
<code>bash
curl --data &#39;{&quot;method&quot;:&quot;signer_requestsToConfirm&quot;,&quot;params&quot;:[],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: [ ... ]
}
</code></p>

<hr>
<h3 id='signer_subscribepending'>signer_subscribePending</h3>
<p>Starts a subscription for transactions in the confirmation queue.
    Each event contains all transactions currently in the queue.</p>

<p>An example notification received by subscribing to this event:
    <code>
    {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;signer_pending&quot;,&quot;params&quot;:{&quot;subscription&quot;:&quot;0x416d77337e24399d&quot;,&quot;result&quot;:[]}}
</code></p>

<p>You can unsubscribe using <code>signer_unsubscribePending</code> RPC method. Subscriptions are also tied to a transport
    connection, disconnecting causes all subscriptions to be canceled.</p>
<h4 id='parameters-8'>Parameters</h4>
<p>None</p>
<h4 id='returns-8'>Returns</h4>
<ul>
<li><code>String</code> - Assigned subscription ID</li>
</ul>
<h4 id='example-8'>Example</h4>
<p>Request
```bash
wscat -c localhost:8546</p>

<blockquote>
<p>{&quot;method&quot;:&quot;signer_subscribePending&quot;,&quot;params&quot;:[],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}
```</p>
</blockquote>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: &quot;0x416d77337e24399d&quot;
}
</code></p>

<hr>
<h3 id='signer_unsubscribepending'>signer_unsubscribePending</h3>
<p>Unsubscribes from pending transactions subscription.</p>
<h4 id='parameters-9'>Parameters</h4>
<ol>
<li><code>String</code> - Subscription ID</li>
</ol>
<pre class="highlight javascript"><code><span class="nx">params</span><span class="p">:</span> <span class="p">[</span><span class="s2">"0x416d77337e24399d"</span><span class="p">]</span>
</code></pre><h4 id='returns-9'>Returns</h4>
<ul>
<li><code>Boolean</code> - whether the call was successful</li>
</ul>
<h4 id='example-9'>Example</h4>
<p>Request
```bash
wscat -c localhost:8546</p>

<blockquote>
<p>{&quot;method&quot;:&quot;signer_unsubscribePending&quot;,&quot;params&quot;:[&quot;0x416d77337e24399d&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}
```</p>
</blockquote>

<p>Response
<code>js
{
  &quot;id&quot;: 1,
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;result&quot;: true
}
</code></p>
