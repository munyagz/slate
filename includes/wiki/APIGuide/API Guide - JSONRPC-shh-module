<p><strong>Note:</strong> <em>Run parity with the <code>--whisper</code> flag to enable this API.</em></p>
<h2 id='json-rpc-methods'>JSON-RPC methods</h2>
<ul>
<li><a href="#shh_info">shh_info</a></li>
<li><a href="#shh_newKeyPair">shh_newKeyPair</a></li>
<li><a href="#shh_addPrivateKey">shh_addPrivateKey</a></li>
<li><a href="#shh_newSymKey">shh_newSymKey</a></li>
<li><a href="#shh_addSymKey">shh_addSymKey</a></li>
<li><a href="#shh_getPublicKey">shh_getPublicKey</a></li>
<li><a href="#shh_getPrivateKey">shh_getPrivateKey</a></li>
<li><a href="#shh_getSymKey">shh_getSymKey</a></li>
<li><a href="#shh_deleteKey">shh_deleteKey</a></li>
<li><a href="#shh_post">shh_post</a></li>
<li><a href="#shh_newMessageFilter">shh_newMessageFilter</a></li>
<li><a href="#shh_getFilterMessages">shh_getFilterMessages</a></li>
<li><a href="#shh_deleteMessageFilter">shh_deleteMessageFilter</a></li>
<li><a href="#shh_subscribe">shh_subscribe</a></li>
<li><a href="#shh_unsubscribe">shh_unsubscribe</a></li>
</ul>
<h2 id='json-rpc-api-reference'>JSON-RPC API Reference</h2><h3 id='shh_info'>shh_info</h3>
<p>Returns info about the whisper node.</p>
<h4 id='parameters'>Parameters</h4>
<p>None</p>
<h4 id='returns'>Returns</h4>
<ul>
<li><code>Object</code>

<ul>
<li><code>minPow</code>: <code>float</code> required PoW threshold for a message to be accepted into the local pool, or null if there is empty space in the pool.</li>
<li><code>messages</code>: <code>Quantity</code> - Number of messages in the pool.</li>
<li><code>memory</code>: <code>Quantity</code> - Amount of memory used by messages in the pool.</li>
<li><code>targetMemory</code>: <code>Quantity</code> - Target amount of memory for the pool.</li>
</ul></li>
</ul>
<h4 id='example'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_info&quot;,&quot;params&quot;:[],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:{&quot;memory&quot;:0,&quot;messages&quot;:0,&quot;targetMemory&quot;:10485760},&quot;id&quot;:1}
</code></p>

<hr>
<h3 id='shh_newkeypair'>shh_newKeyPair</h3>
<p>Generate a new key pair for asymmetric encryption</p>
<h4 id='parameters-2'>Parameters</h4>
<p>None</p>
<h4 id='returns-2'>Returns</h4>
<ul>
<li><code>Data</code> 32 bytes - A unique identity to refer to this keypair by.</li>
</ul>
<h4 id='example-2'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_newKeyPair&quot;,&quot;params&quot;:[],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0x498cc0323523a6b778bc43edbdbd4402772dfa4aaddc268ed1653e1c85f285d5&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_addprivatekey'>shh_addPrivateKey</h3>
<p>Import a private key to use for asymmetric decryption.</p>
<h4 id='parameters-3'>Parameters</h4>
<ol>
<li><code>Data</code> - 32 bytes - The private key to import</li>
</ol>
<h4 id='returns-3'>Returns</h4>
<ul>
<li><code>Data</code> - 32 bytes - A unique identity to refer to this keypair by.</li>
</ul>
<h4 id='example-3'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_addPrivateKey&quot;,&quot;params&quot;:[&quot;0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0x2265fc77fdb16fe54260a66437267c3cf5b6929d91f7994f48191e9ad9584c50&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_newsymkey'>shh_newSymKey</h3>
<p>Generate a key for symmetric encryption</p>
<h4 id='parameters-4'>Parameters</h4>
<p>None</p>
<h4 id='returns-4'>Returns</h4>
<ul>
<li><code>Data</code> - 32 bytes - A unique identity to refer to this key by.</li>
</ul>
<h4 id='example-4'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_newSymKey&quot;,&quot;params&quot;:[],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0x38cbc721b0a10a85134af2b2c1546850b5ef626e3ca4df37d991c527e22de61f&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_getpublickey'>shh_getPublicKey</h3>
<p>Get the public key associated with an asymmetric identity.</p>
<h4 id='parameters-5'>Parameters</h4>
<ul>
<li><code>Data</code> - 32 bytes - The identity to fetch the public key for.</li>
</ul>
<h4 id='returns-5'>Returns</h4>
<ul>
<li><code>Data</code> - 64 bytes - The public key of the asymmetric identity.</li>
</ul>
<h4 id='example-5'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_getPublicKey&quot;,&quot;params&quot;:[&quot;0x3dc157405a2f8426df9e36b21fa99b36be2ae317eb09cde5e29b0a5505810561&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0x0b14b6056be85728b3a32918c7e067fc5f382c9d32f8893e5d161177404855c183b0fb5026c2fec382f9635f5366759075aef7474330d16613aedc43c83ad2f9&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_getprivatekey'>shh_getPrivateKey</h3>
<p>Get the private key associated with an asymmetric identity.</p>
<h4 id='parameters-6'>Parameters</h4>
<ul>
<li><code>Data</code> - 32 bytes - The identity to fetch the private key for.</li>
</ul>
<h4 id='returns-6'>Returns</h4>
<ul>
<li><code>Data</code> - 32 bytes - The private key of the asymmetric identity.</li>
</ul>
<h4 id='example-6'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_getPrivateKey&quot;,&quot;params&quot;:[&quot;0x3dc157405a2f8426df9e36b21fa99b36be2ae317eb09cde5e29b0a5505810561&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0x04aa79b13d4e9f765972e9f8207de424ddbee123a6955e21b930ae067ef22e4d&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_getsymkey'>shh_getSymKey</h3>
<p>Get the key associated with a symmetric identity.</p>
<h4 id='parameters-7'>Parameters</h4>
<ul>
<li><code>Data</code> - 32 bytes - The identity to fetch the key for.</li>
</ul>
<h4 id='returns-7'>Returns</h4>
<ul>
<li><code>Data</code> - 32 bytes - The key of the symmetric identity.</li>
</ul>
<h4 id='example-7'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_getSymKey&quot;,&quot;params&quot;:[&quot;0xf9a60ba691ef4e4755143db9c76d254f9ce813b361037f6f90dc53dc71296fd8&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0xe4288c636477f3f7685a3112e7e3e717b78a4310366596b45161553e41f3cd56&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_deletekey'>shh_deleteKey</h3>
<p>Delete the key or key pair denoted by the given identity.</p>
<h4 id='parameters-8'>Parameters</h4>
<ul>
<li><code>Data</code> - 32 bytes - The identity to remove.</li>
</ul>
<h4 id='returns-8'>Returns</h4>
<ul>
<li><code>bool</code> - <code>true</code> on successful removal, <code>false</code> on unknown identity.</li>
</ul>
<h4 id='example-8'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_deleteKey&quot;,&quot;params&quot;:[&quot;0xf9a60ba691ef4e4755143db9c76d254f9ce813b361037f6f90dc53dc71296fd8&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:true,&quot;id&quot;:1}
</code></p>
<h3 id='shh_post'>shh_post</h3>
<p>Post a message to the whisper network.</p>
<h4 id='parameters-9'>Parameters</h4>
<ul>
<li>0. <code>Object</code>

<ul>
<li><code>to</code>: <code>Object</code> The receiver of the message. Can be omitted for a broadcast message. Use one of the following two fields</li>
<li><code>public</code>: <code>Data</code> - 64 bytes - The public key of the recipient</li>
<li><code>identity</code>: <code>Data</code> - 32 bytes - The identity of the recipient key on your local node.</li>
<li><code>from</code> <code>Data</code> - 32 bytes - asymmetric identity to sign the message with, or null.</li>
<li><code>topics</code>: [<code>Data</code>] - Array of topics for the message. Should be non-empty.</li>
<li><code>payload</code>: <code>Data</code> - Message data</li>
<li><code>padding</code>: <code>Data</code> - Optional padding. Up to 2^24 - 1 bytes.</li>
<li><code>priority</code>: <code>Quantity</code> - How many milliseconds to spend doing PoW.</li>
<li><code>ttl</code>: <code>Quantity</code> - Time to live (in seconds) of the message before expiry </li>
</ul></li>
</ul>
<h4 id='returns-9'>Returns</h4>
<ul>
<li><code>bool</code> - <code>true</code> on successful posting of the message.</li>
</ul>
<h4 id='example-9'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_post&quot;,&quot;params&quot;:[{
   &quot;from&quot;:&quot;0x193f71c502feb0c181ed0b97352fdcebcb621c733cd80637b2154a2a2b867a12&quot;,
   &quot;topics&quot;:[&quot;0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6&quot;],
   &quot;payload&quot;:&quot;0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6&quot;,
   &quot;priority&quot;:40,
   &quot;ttl&quot;:400
 }],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:true,&quot;id&quot;:1}
</code></p>
<h3 id='shh_newmessagefilter'>shh_newMessageFilter</h3>
<p>Create a new polled filter for messages.</p>
<h4 id='parameters-10'>Parameters</h4>
<ol>
<li><code>Object</code>

<ul>
<li><code>decryptWith</code>: <code>Data</code> - 32 bytes - Identity of key used for description. null if listening for broadcasts.</li>
<li><code>from</code>: <code>Data</code> - 64 bytes - if present, only accept messages signed by this key.</li>
<li><code>topics</code>: [<code>Data</code>] - Only accept messages matching these topics. Should be non-empty.</li>
</ul></li>
</ol>
<h4 id='returns-10'>Returns</h4>
<ul>
<li><code>Data</code> - 32 bytes - Unique identity for this filter.</li>
</ul>
<h4 id='example-10'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_newMessageFilter&quot;,&quot;params&quot;:[{&quot;decryptWith&quot;:&quot;0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6&quot;, &quot;from&quot;:&quot;0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6&quot;,
&quot;topics&quot;:[&quot;0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6&quot;]}],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:&quot;0xea7120c5408c72cfd7e0e1d2ff62df8e208d9a1f85d2ed54a4a3e1ad6daeb6f9&quot;,&quot;id&quot;:1}
</code></p>
<h3 id='shh_getfiltermessages'>shh_getFilterMessages</h3>
<p>Poll for changes on a filter.</p>
<h4 id='parameters-11'>Parameters</h4>
<ul>
<li><code>Data</code> - 32 bytes - The identity to fetch changes for.</li>
</ul>
<h4 id='returns-11'>Returns</h4>
<ul>
<li><code>Array</code>, where each item an <code>Object</code>

<ul>
<li><code>from</code>: <code>Data</code> - 64 bytes - Public key that signed this message or null</li>
<li><code>recipient</code>: <code>Data</code> - 32 bytes - local identity which decrypted this message, or null if broadcast.</li>
<li><code>ttl</code>: <code>Quantity</code> - time to live of the message in seconds.</li>
<li><code>topics</code>: [<code>Data</code>] - Topics which matched the filter</li>
<li><code>timestamp</code>: <code>Quantity</code> - Unix timestamp of the message</li>
<li><code>payload</code>: <code>Data</code> - The message body</li>
<li><code>padding</code>: <code>Data</code> - Optional padding which was decoded.</li>
</ul></li>
</ul>
<h4 id='example-11'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_getFilterMessages&quot;,&quot;params&quot;:[&quot;0x2f49562fb4a52d43297f1208296d22263a9f6fb7518ef21d29129fddbaf926ee&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:[],&quot;id&quot;:1}
</code></p>
<h3 id='shh_deletemessagefilter'>shh_deleteMessageFilter</h3>
<p>Delete a message filter by identifier</p>
<h4 id='parameters-12'>Parameters</h4>
<ul>
<li><code>Data</code> - 32 bytes - The identity of the filter to delete.</li>
</ul>
<h4 id='returns-12'>Returns</h4>
<ul>
<li><code>bool</code> - <code>true</code> on deletion, <code>false</code> on unrecognized ID.</li>
</ul>
<h4 id='example-12'>Example</h4>
<p>Request
<code>
curl --data &#39;{&quot;method&quot;:&quot;shh_deleteMessageFilter&quot;,&quot;params&quot;:[&quot;0xea7120c5408c72cfd7e0e1d2ff62df8e208d9a1f85d2ed54a4a3e1ad6daeb6f9&quot;],&quot;id&quot;:1,&quot;jsonrpc&quot;:&quot;2.0&quot;}&#39; -H &quot;Content-Type: application/json&quot; -X POST localhost:8545
</code></p>

<p>Response
<code>
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;result&quot;:true,&quot;id&quot;:1}
</code></p>
<h3 id='shh_subscribe'>shh_subscribe</h3>
<p>Open a subscription to a filter. Works in general the same as <code>eth_subscribe</code> and <code>parity_subscribe</code> in pubsub.
Subscription calls are only supported on the websocket transport. (&#39;ws://localhost:8545&#39;)</p>
<h4 id='parameters-13'>Parameters</h4>
<p>See <a href="#shh_newMessageFilter">shh_newMessageFilter</a></p>
<h4 id='returns-13'>Returns</h4>
<p>subscription id</p>
<h4 id='example-13'>Example</h4>
<p>TODO</p>
<h3 id='shh_unsubscribe'>shh_unsubscribe</h3>
<p>Close a subscribed filter</p>
<h4 id='parameters-14'>Parameters</h4>
<ul>
<li><code>Data</code> - The subscription ID of the filter</li>
</ul>
<h4 id='returns-14'>Returns</h4>
<ul>
<li><code>bool</code> - <code>true</code> on success, <code>false</code> on unknown subscription ID</li>
</ul>
<h4 id='example-14'>Example</h4>
<p>TODO</p>
